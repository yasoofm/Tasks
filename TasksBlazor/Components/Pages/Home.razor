@page "/"
@inject NavigationManager navigation
@inject HomeRefreshService MyService

<PageTitle>Home</PageTitle>

<h1>Hello, world!</h1>

<TelerikButton OnClick="@SayHelloHandler" ThemeColor="primary">Say Hello</TelerikButton>
<TelerikButton OnClick="@NavToLogin" ThemeColor="primary">Login</TelerikButton>
<TelerikButton OnClick="@NavToSignup" ThemeColor="primary">Signup</TelerikButton>
<TelerikButton OnClick="@NavToAddTask" ThemeColor="primary">Add Task</TelerikButton>
<br />
<br />
<div style="display: flex; justify-content: space-around;">
    <div>
        <TicketColumn Data="@TodoTickets" Title="To do"></TicketColumn>
    </div>
    <div>
        <TicketColumn Data="@ProgressTickes" Title="In progress"></TicketColumn>
    </div>
    <div>
        <TicketColumn Data="@DoneTickets" Title="Done"></TicketColumn>
    </div>
</div>
<br />

@helloString

Welcome to your new app.

@code {
    MarkupString helloString;
    [CascadingParameter] private GlobalAppState? State { get; set; }
    public IEnumerable<GetTaskResponse>? TodoTickets { get; set; }
    public IEnumerable<GetTaskResponse>? ProgressTickes { get; set; }
    public IEnumerable<GetTaskResponse>? DoneTickets { get; set; }

    protected override async Task OnInitializedAsync()
    {
        MyService.RefreshRequested += RefreshState;
        try
        {
            if (State == null)
            {
                throw new NullReferenceException("State is null in Home");
            }

            if (State.IsLoggedIn)
            {
                await State.GetTasksAsync();

                TodoTickets = State.todoTickets;
                ProgressTickes = State.progressTickets;
                DoneTickets = State.doneTickets;
            }
        }
        catch (NullReferenceException ex)
        {
            Console.WriteLine(ex);
        }
    }

    private void RefreshState()
    {
        try
        {
            if (State == null)
            {
                throw new NullReferenceException("State is null in Home in RefreshState");
            }

            TodoTickets = State.todoTickets;
            ProgressTickes = State.progressTickets;
            DoneTickets = State.doneTickets;

            this.StateHasChanged();
        }
        catch (NullReferenceException ex)
        {
            Console.WriteLine(ex);
        }
    }

    void SayHelloHandler()
    {
        string msg = string.Format("Hello from <strong>Telerik Blazor</strong> at {0}.<br /> Now you can use C# to write front-end!", DateTime.Now);
        helloString = new MarkupString(msg);
    }

    void NavToLogin()
    {
        navigation.NavigateTo("Login");
    }

    void NavToSignup()
    {
        navigation.NavigateTo("Signup");
    }

    void NavToAddTask()
    {
        navigation.NavigateTo("AddTask");
    }
}